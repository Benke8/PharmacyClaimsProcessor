spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres-service}:${DB_PORT:5432}/${DB_NAME:mydb}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      connection-timeout: 30000
      minimum-idle: 5

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-0.kafka:9092,kafka-1.kafka:9092,kafka-2.kafka:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:my-app-consumer-group}
      auto-offset-reset: earliest
      enable-auto-commit: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    properties:
      security.protocol: PLAINTEXT  # SSL once deploy ready
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    open-in-view: false

  # Health checks (for K8s readiness/liveness probes)
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics
    endpoint:
      health:
        probes:
          enabled: true
    health:
      livenessstate:
        enabled: true
      readinessstate:
        enabled: true
    server:
      port: 8081

# Custom app-specific properties
app:
  retry-count: ${APP_RETRY_COUNT:5}

logging:
  level:
    root: INFO
    org.springframework.web: WARN
    org.hibernate: WARN
